#include <iostream>
#include <string>

/* 
СТРОКИ И ФАЙЛЫ

1. СТРОКИ СТАРОГО С-ТИПА
представляют из себя всего лишь массив символов с нуливым окончанием.
По нулю определяется конец строки. В случае, если пользователь забыл поставить \0
или он по тем или иным причинам стёрся, функции С будут пытаться считывать
символы до тех пор, пока встретят \0 или не вызовут ошибку

char cstr1[] = "CD-style string1"; \\ '0' в конце дописывается автоматически
char cstr2[] = { 'C', '-', 's', 't', 'y'. 'l', 'e', ' ', 's', 't', 'r', 'i', 'n', 'g', '2', '\0' }
char cstr3[] = { '\67', '\45', '\115', 't', 'y', 'l', 'e', ' ', 's', 't', 'r', 'i', 'n', 'g', '3', '\0' }
*/

//2. ФУНКЦИИ ДЛЯ РАБОТЫ С C-СТРОКАМИ
// вывод на печать printf(char*, , , ) или printf_s(char*, , , ) - print formatted
// пример: printf("базовая %s строка %f", параметр1, параметр2)
// знаком % помечаются места вставки параметров

// %f - параметр подставляется на место %f, оформленное в виде числа с плавающей точкой
// %s - параметр подставляется на место %s как строка
// %d - параметр подставляется на место %d как целое число
// %e - параметр подставляется на место %e как число в экспоненциальном виде

// 3. ПРОЧИЕ СТРОКОВЫЕ ФУНКЦИИ
// объединение (конкатенация) строк strcat(*char, *char)
// копирование из одной строки в другую strcpy(*char, *char)
// сравнение strcmp(*char, *char), если строки идентичны, возвращает 0, иначе - позицию первого различного символа
// длина строки strlen(*char)
// чтение строки с консоли scanf(*char, параметр)
// вставка строки в строку производится в несколько действий
// иногда надо будет добавлять _s, e.g. strlen_s(*char)


using namespace std;
int main()
{
printf(cstr1);
// в функцию передаётся массив char (а имя массива являяется УКАЗАТЕЛЕМ на самый ... либо указатель *char
printf(cstr3); //автоматический перенос строки не делается
printf("Parameter1 = %2.2f, parameter2 = %d, parameter3 = %s\n\n, 1.5, 100, "\"some string\"");
//2.2 - первая 2 - свободное место перед целым числом, а вторая 2 - количество цифр после точки

char place_to_copy[255];
char place_from_copy[] = "abcdefghijklmnop";
strcpy(place_to_copy, 255, place_from_copy);
printf("Result = %s", place_to_copy);

getchar();
return 0;
}

